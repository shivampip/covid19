{"version":3,"sources":["api/datahub.js","components/LiveArea.js","components/App.js","index.js"],"names":["axios","create","baseURL","data","LiveArea","state","countries","selectedC","rdata","totalConfiremd","totalDeath","wdata","wtc","wtd","getData","a","console","log","datahub","get","response","reduce","d","indexOf","Country","push","length","Confirmed","Deaths","setState","renderGraph","country","filter","tc","td","renderCountries","map","key","value","this","className","onChange","eve","target","width","window","innerWidth","height","margin","top","right","left","bottom","strokeDasharray","dataKey","tickFormatter","timeStr","moment","format","type","stackId","stroke","fill","PureComponent","jsfiddleUrl","App","id","href","React","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0abcd360.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n\tbaseURL: 'https://pkgstore.datahub.io/core/covid-19/'\r\n});\r\n\r\n// worldwide-aggregated\r\n// https://pkgstore.datahub.io/core/covid-19/worldwide-aggregated_json/data/017c259c1d8ed879992e09f43faeefa5/worldwide-aggregated_json.json\r\n\r\n// countrywise\r\n// https://pkgstore.datahub.io/core/covid-19/countries-aggregated_json/data/14fece7bbf912fcd8e0fbe6ba2af9873/countries-aggregated_json.json\r\n","import React, { PureComponent } from 'react';\r\nimport moment from 'moment';\r\nimport datahub from '../api/datahub';\r\nimport './LiveArea.css';\r\n\r\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\r\n\r\nlet data = [];\r\n\r\nexport default class LiveArea extends PureComponent {\r\n\tstatic jsfiddleUrl = 'https://jsfiddle.net/alidingling/c1rLyqj1/';\r\n\tstate = {\r\n\t\tcountries: [],\r\n\t\tselectedC: 'India',\r\n\t\trdata: [],\r\n\t\tdata: null,\r\n\t\ttotalConfiremd: 0,\r\n\t\ttotalDeath: 0,\r\n\t\twdata: [],\r\n\t\twtc: 0,\r\n\t\twtd: 0\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tawait this.getData();\r\n\t\tawait this.renderGraph(this.state.selectedC);\r\n\t}\r\n\r\n\tgetData = async () => {\r\n\t\tconsole.log('Fetching Data');\r\n\t\tlet response = await datahub.get(\r\n\t\t\t'countries-aggregated_json/data/14fece7bbf912fcd8e0fbe6ba2af9873/countries-aggregated_json.json'\r\n\t\t);\r\n\t\tlet rdata = response.data;\r\n\t\tvar countries = rdata.reduce(function(a, d) {\r\n\t\t\tif (a.indexOf(d.Country) === -1) {\r\n\t\t\t\ta.push(d.Country);\r\n\t\t\t}\r\n\t\t\treturn a;\r\n\t\t}, []);\r\n\r\n\t\t// worldwide\r\n\t\tresponse = await datahub.get(\r\n\t\t\t'worldwide-aggregated_json/data/017c259c1d8ed879992e09f43faeefa5/worldwide-aggregated_json.json'\r\n\t\t);\r\n\t\tconsole.log('Worldwide');\r\n\t\tlet wdata = response.data;\r\n\t\tconsole.log(wdata);\r\n\r\n\t\tlet wtc = wdata[wdata.length - 1] ? wdata[wdata.length - 1].Confirmed : 0;\r\n\t\tlet wtd = wdata[wdata.length - 1] ? wdata[wdata.length - 1].Deaths : 0;\r\n\r\n\t\tthis.setState({ countries: countries, rdata: rdata, wdata: wdata, wtc: wtc, wtd: wtd });\r\n\t};\r\n\r\n\trenderGraph = (country) => {\r\n\t\tconsole.log('Rendering Graph');\r\n\t\tdata = this.state.rdata.filter((d) => d.Country === country);\r\n\t\tdata = data.filter((d) => d.Deaths > 0);\r\n\t\tconsole.log('Country data');\r\n\t\tconsole.log(data);\r\n\t\t// this.state.data= data;\r\n\t\tconsole.log('Total confirmed');\r\n\t\tlet tc = data[data.length - 1] ? data[data.length - 1].Confirmed : 0;\r\n\t\tlet td = data[data.length - 1] ? data[data.length - 1].Deaths : 0;\r\n\t\tconsole.log(tc);\r\n\t\tthis.setState({ selectedC: country, data: data, totalConfiremd: tc, totalDeath: td });\r\n\t};\r\n\r\n\trenderCountries = () => {\r\n\t\treturn this.state.countries.map((country) => {\r\n\t\t\treturn (\r\n\t\t\t\t<option key={country} value={country}>\r\n\t\t\t\t\t{country}\r\n\t\t\t\t</option>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconsole.log('RENDERING');\r\n\t\tif (this.state.data === null) {\r\n\t\t\tthis.renderGraph(this.state.selectedC);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className=\"live-area\">\r\n\t\t\t\t<select\r\n\t\t\t\t\tvalue={this.state.selectedC}\r\n\t\t\t\t\tonChange={(eve) => {\r\n\t\t\t\t\t\tconsole.log(eve.target.value);\r\n\t\t\t\t\t\tthis.renderGraph(eve.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.renderCountries()}\r\n\t\t\t\t</select>\r\n\r\n\t\t\t\t{/* <h2>{this.state.selectedC}</h2> */}\r\n\t\t\t\t<h3>Total Confirmed Cases: {this.state.totalConfiremd}</h3>\r\n\t\t\t\t<h3>Total Deaths: {this.state.totalDeath}</h3>\r\n\t\t\t\t<AreaChart\r\n\t\t\t\t\twidth={window.innerWidth * 0.7}\r\n\t\t\t\t\theight={300}\r\n\t\t\t\t\tdata={this.state.data}\r\n\t\t\t\t\tmargin={{\r\n\t\t\t\t\t\ttop: 20,\r\n\t\t\t\t\t\tright: 10,\r\n\t\t\t\t\t\tleft: 10,\r\n\t\t\t\t\t\tbottom: 0\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CartesianGrid strokeDasharray=\"2 2\" />\r\n\t\t\t\t\t<XAxis dataKey=\"Date\" tickFormatter={(timeStr) => moment(timeStr).format('YYYY-MM-DD')} />\r\n\t\t\t\t\t<YAxis />\r\n\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t<Area type=\"monotone\" dataKey=\"Deaths\" stackId=\"1\" stroke=\"#3ac798\" fill=\"#ff0026\" />\r\n\t\t\t\t\t<Area type=\"monotone\" dataKey=\"Confirmed\" stackId=\"1\" stroke=\"#3ac798\" fill=\"#3ac798\" />\r\n\t\t\t\t</AreaChart>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<h2>Worldwide</h2>\r\n\t\t\t\t<h3>Total Confirmed Cases: {this.state.wtc}</h3>\r\n\t\t\t\t<h3>Total Deaths: {this.state.wtd}</h3>\r\n\t\t\t\t<AreaChart\r\n\t\t\t\t\twidth={window.innerWidth * 0.7}\r\n\t\t\t\t\theight={300}\r\n\t\t\t\t\tdata={this.state.wdata}\r\n\t\t\t\t\tmargin={{\r\n\t\t\t\t\t\ttop: 20,\r\n\t\t\t\t\t\tright: 10,\r\n\t\t\t\t\t\tleft: 10,\r\n\t\t\t\t\t\tbottom: 0\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CartesianGrid strokeDasharray=\"2 2\" />\r\n\t\t\t\t\t<XAxis dataKey=\"Date\" tickFormatter={(timeStr) => moment(timeStr).format('YYYY-MM-DD')} />\r\n\t\t\t\t\t<YAxis />\r\n\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t<Area type=\"monotone\" dataKey=\"Deaths\" stackId=\"1\" stroke=\"#3ac798\" fill=\"#ff0026\" />\r\n\t\t\t\t\t<Area type=\"monotone\" dataKey=\"Confirmed\" stackId=\"1\" stroke=\"#3ac798\" fill=\"#3ac798\" />\r\n\t\t\t\t</AreaChart>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport LiveArea from './LiveArea';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"app\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<h1 id=\"title\">COVID-19 Live Update</h1>\r\n\t\t\t\t\t<LiveArea />\r\n\t\t\t\t\t<h1>Stay Home, Stay Safe</h1>\r\n\t\t\t\t\t<p id=\"credit\">\r\n\t\t\t\t\t\tData source <a href=\"https://datahub.io/\">DataHub</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\n\r\nReactDOM.render(<App/>, document.querySelector(\"#root\"));"],"sourceRoot":""}